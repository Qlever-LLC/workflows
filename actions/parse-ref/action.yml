# Copyright 2022 Qlever LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Parse the ref
description: Determine appropriate version and tag(s) based on ref

outputs:
  version:
    description: e.g., 3.0.1
    value: ${{ steps.ref.outputs.version }}
  release:
    description: True for stable releases (not betas etc.)
    value: ${{ steps.ref.outputs.release }}
  major:
    description: Major version number
    value: ${{ steps.semver.outputs.major }}
  minor:
    description: Minor version number
    value: ${{ steps.semver.outputs.minor }}
  patch:
    description: Patch version number
    value: ${{ steps.semver.outputs.patch }}
  prerelease:
    description: Prerelease type (e.g., beta)
    value: ${{ steps.semver.outputs.prerelease }}
  build:
    description: Build number for prerelease (e.g., 2)
    value: ${{ steps.semver.outputs.build }}

runs:
  using: composite
  steps:
    - name: Parse Ref
      shell: bash
      id: ref
      run: |
        echo 'Processing git ref:' $GITHUB_REF

        # Release version is just the release number
        if [[ $GITHUB_REF == refs/heads/release/* ]]; then
          VERSION=${GITHUB_REF#refs/heads/release/}
          #RELEASE=true

        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            RELEASE=true
          else
            VERSION=tag-${GITHUB_REF#refs/tags/}
          fi

        # Branch version is branch name (with '/' -> '-')
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')

          # Expect for the default_branch, which gets version "edge"
          if [ "$VERSION" == "${{ github.event.repository.default_branch }}" ]; then
            VERSION=edge
          fi

        # PR versions are pr-<github pr number>
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.number }}

        else
          echo ::error ::Can not determine version of service -- unexpected job trigger? Stopping.
          exit 1
        fi

        echo ::set-output name=version::${VERSION}
        echo ::set-output name=release::${RELEASE}

    - name: Parse Semver
      id: semver
      if: ${{ steps.ref.outputs.release }}
      uses: booxmedialtd/ws-action-parse-semver@v1.4.0
      with:
        input_string: ${{ steps.ref.outputs.version }}
        #version_extractor_regex: '\/v(.*)$'
